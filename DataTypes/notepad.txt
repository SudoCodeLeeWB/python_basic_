4. 기타 제어 흐름 도구
4.1. if 문
4.2. for 문
4.3. range() 함수
4.4. 루프의 break 와 continue 문, 그리고 else 절
4.5. pass 문
4.6. match Statements
4.7. 함수 정의하기
4.8. 함수 정의 더 보기
4.8.1. 기본 인자 값
4.8.2. 키워드 인자
4.8.3. 특수 매개 변수
4.8.3.1. 위치-키워드(Positional-or-Keyword) 인자
4.8.3.2. 위치 전용 매개 변수
4.8.3.3. 키워드 전용 인자
4.8.3.4. 함수 예제
4.8.3.5. 복습
4.8.4. 임의의 인자 목록
4.8.5. 인자 목록 언 패킹
4.8.6. 람다 표현식
4.8.7. 도큐멘테이션 문자열
4.8.8. 함수 어노테이션
4.9. 막간극: 코딩 스타일
5. 자료 구조
5.1. 리스트 더 보기
5.1.1. 리스트를 스택으로 사용하기
5.1.2. 리스트를 큐로 사용하기
5.1.3. 리스트 컴프리헨션
5.1.4. 중첩된 리스트 컴프리헨션
5.2. del 문
5.3. 튜플과 시퀀스
5.4. 집합
5.5. 딕셔너리
5.6. 루프 테크닉
5.7. 조건 더 보기
5.8. 시퀀스와 다른 형들을 비교하기
6. 모듈
6.1. 모듈 더 보기
6.1.1. 모듈을 스크립트로 실행하기
6.1.2. 모듈 검색 경로
6.1.3. “컴파일된” 파이썬 파일
6.2. 표준 모듈들
6.3. dir() 함수
6.4. 패키지
6.4.1. 패키지에서 * 임포트 하기
6.4.2. 패키지 내부 간의 참조
6.4.3. 여러 디렉터리에 있는 패키지
7. 입력과 출력
7.1. 장식적인 출력 포매팅
7.1.1. 포맷 문자열 리터럴
7.1.2. 문자열 format() 메서드
7.1.3. 수동 문자열 포매팅
7.1.4. 예전의 문자열 포매팅
7.2. 파일을 읽고 쓰기
7.2.1. 파일 객체의 매소드
7.2.2. json 으로 구조적인 데이터를 저장하기
8. 에러와 예외
8.1. 문법 에러
8.2. 예외
8.3. 예외 처리하기
8.4. 예외 일으키기
8.5. 예외 연쇄
8.6. 사용자 정의 예외
8.7. 뒷정리 동작 정의하기
8.8. 미리 정의된 뒷정리 동작들
8.9. Raising and Handling Multiple Unrelated Exceptions
8.10. Enriching Exceptions with Notes
9. 클래스
9.1. 이름과 객체에 관한 한마디
9.2. 파이썬 스코프와 이름 공간
9.2.1. 스코프와 이름 공간 예
9.3. 클래스와의 첫 만남
9.3.1. 클래스 정의 문법
9.3.2. 클래스 객체
9.3.3. 인스턴스 객체
9.3.4. 메서드 객체
9.3.5. 클래스와 인스턴스 변수
9.4. 기타 주의사항들
9.5. 상속
9.5.1. 다중 상속
9.6. 비공개 변수
9.7. 잡동사니
9.8. 이터레이터
9.9. 제너레이터
9.10. 제너레이터 표현식
10. 표준 라이브러리 둘러보기
10.1. 운영 체제 인터페이스
10.2. 파일 와일드카드
10.3. 명령행 인자
10.4. 에러 출력 리디렉션과 프로그램 종료
10.5. 문자열 패턴 매칭
10.6. 수학
10.7. 인터넷 액세스
10.8. 날짜와 시간
10.9. 데이터 압축
10.10. 성능 측정
10.11. 품질 관리
10.12. 배터리가 포함됩니다
11. 표준 라이브러리 둘러보기 — 2부
11.1. 출력 포매팅
11.2. 템플릿
11.3. 바이너리 데이터 레코드 배치 작업
11.4. 다중 스레딩
11.5. 로깅
11.6. 약한 참조
11.7. 리스트 작업 도구
11.8. 10진 부동 소수점 산술
12. 가상 환경 및 패키지
12.1. 소개
12.2. 가상 환경 만들기
12.3. pip로 패키지 관리하기
13. 이제 뭘 하지?
14. 대화형 입력 편집 및 히스토리 치환
14.1. 탭 완성 및 히스토리 편집
14.2. 대화형 인터프리터 대안
15. 부동 소수점 산술: 문제점 및 한계
15.1. 표현 오류
16. 부록
16.1. 대화형 모드
16.1.1. 에러 처리
16.1.2. 실행 가능한 파이썬 스크립트
16.1.3. 대화형 시작 파일
16.1.4. 커스터마이제이션 모듈

*******************************************************
올해의 대목표 5가지 . 


1. 파이썬을 공부해서 메인 언어로 사용한다. 
2. 대학 진학을 위해 ielts준비를 한다. 
3. 코딩캠프에 참여할 수 있는 여건이 된다면 참여한다. => 7월까지의 시간이 있고//
4. 





학교 관련해서는 서류 나올때까지는 기다려야 하고 
=> 학교에서 서류 안나오면 반수 준비를 하던 재수를 하던 편입을 하던 결정해야 하고,
=> 대부분의 경우에는 가능할 것


ielts 준비해야 하는데 => 학교 들어가는건 7월로 계획을 잡고// 2월에도 들어 갈 수 있도록 준비는 해 놓기. 
기업별 부트캠프나 할 수있는 일들을 보여주기 위해서는 이력서 준비해야 하고 
내가 만든 프로젝트 넣고 파이썬 관련 깃허브 pull/pust request 자동으로 사용 가능하도록 하고 => 툴 만들어서 사용하기 


아이엘츠 하면서 회사 부트캠프 진행 할 수 있으면 하고 
이때 메인언어는 파이썬으로 하고
DJANGO 이용해서 웹 서비스 하나 호스팅하는것 목표 잡고

웹 호스팅 하는 방법에 대해 배워야 하고.
http 프로토콜 및 웹 api 구조 관련해서 공부해야하고


// 
공부해야 하는 언어/기술.
1.파이썬/해당 프레임워크
2.flutter
3.mysql => sql structure. 


<<언어적 측면>>
1. 파이썬 공부를 해야 한다. 
2. 파이썬 확장 라이브러리 및 DJANGO 이용해서 웹서비스의 백엔드로 사용. 
파이썬을 이용해서 백그라운드 에플리케이션 작동 시킬 수 있었으면 좋겠다. 


3. TS 공부를 하고 이에 대해 FRAMEWORK 으로는 ANGULAR 이용하고.
TS / HTML / CSS 프레임워크 공부해서 풀스텍 할 수 있도록 한다. 


4. DATABASE 연결하기 위해서
1. maindatabase를 mysql 로 잡고 이에 대해 공부. 


차후의 계획 :
DART 한번 파보고 싶다. 
=> cross platform 
RUST 역시 한번 파보고 싶다. 

우선은 파이썬부터!





파이썬 공부 순서 (7개월 간의 목표) 
1. 파이썬 자습서를 완료한다.
2. 파이썬으로 만들 수 있는 예시들을 2~3개 정도의 use case 를 가지고 만들어 본다 
3. PEP를 지켜서 파이썬 작성을 할 수 있도록 연습한다 . 
4. 




MEMORY LAYOUT IN PYTHON:

https://www.geeksforgeeks.org/memory-layout-of-c-program/
# => variables in memory